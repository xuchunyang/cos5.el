* [[https://cloud.tencent.com/document/product/436/7751][对象存储 简介 - API 文档 - 文档中心 - 腾讯云]]                         :verb:
:PROPERTIES:
:Verb-Map-Request: chunyang-verb-cos5-insert-authorization
:END:

** Service 接口
template https://service.cos.myqcloud.com

*** GET Service（List Buckets）
GET /

*** 指定 region
GET https://cos.ap-shanghai.myqcloud.com/

** Bucket 接口
template https://test-1258907199.cos.ap-shanghai.myqcloud.com/

*** GetBucket (List Objects)
GET /

** Object 接口
template https://test-1258907199.cos.ap-shanghai.myqcloud.com/

*** PUT Object
PUT /cos5.el
Content-Type: text/plain; charset=utf-8

{{(verb-read-file "cos5.el")}}

*** PUT Object (UTF-8 测试)
PUT /utf-8.txt
Content-Type: text/plain; charset=utf-8

hello, 你好呀

*** PUT Object ([[https://cloud.tencent.com/document/product/436/36427][对象存储 MD5 校验 - 最佳实践 - 文档中心 - 腾讯云]])
PUT /data.txt
Content-Type: text/plain
Content-MD5: {{ (base64-encode-string (secure-hash 'md5 "HELLO\n" nil nil 'binary)) }}
x-cos-meta-md5: {{ (md5 "HELLO\n") }}

HELLO

*** GET Object
GET /data.txt


* COMMENT 自动插入 Authorization

#+begin_src elisp :lexical t
(setq org-use-property-inheritance t)

(defun chunyang-verb-cos5-insert-authorization (request-spec)
  (pcase-let (((eieio method url headers) request-spec))
    (cl-assert (not (assoc "Authorization" headers)))
    (pcase-let ((`(,path . ,query) (url-path-and-query url)))
      (cl-callf2 cons
          (cons "Authorization" (cos5--sign method path query headers))
          (oref request-spec headers))
      request-spec)))
#+end_src

#+RESULTS:
: chunyang-verb-cos5-insert-authorization

